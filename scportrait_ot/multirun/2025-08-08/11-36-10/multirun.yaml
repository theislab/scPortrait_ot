hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    submitit_folder: ${hydra.sweep.dir}/.submitit/%j
    timeout_min: 1440
    cpus_per_task: 6
    gpus_per_node: null
    tasks_per_node: 1
    mem_gb: 100
    nodes: 1
    name: ${hydra.job.name}
    stderr_to_stdout: false
    _target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.SlurmLauncher
    partition: gpu_p
    qos: gpu_normal
    comment: null
    constraint: null
    exclude: null
    gres: gpu:1
    cpus_per_gpu: null
    gpus_per_task: null
    mem_per_gpu: null
    mem_per_cpu: null
    account: null
    signal_delay_s: 120
    max_num_timeout: 0
    additional_parameters: {}
    array_parallelism: 10
    setup: null
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params:
      model.distance: euclidean, inverse_correlation, cosine
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - datamodule=healthy_cite
    - hparam_search=sweep_distance
    - logger.project=scportrait_ot_sweep_distance_healthy_cite
    - datamodule.uniform_sampling_rna=True
  job:
    name: main
    chdir: null
    override_dirname: datamodule.uniform_sampling_rna=True,datamodule=healthy_cite,hparam_search=sweep_distance,logger.project=scportrait_ot_sweep_distance_healthy_cite
    id: ???
    num: ???
    config_name: train
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /ictstr01/home/icb/alessandro.palma/environment/scportrait_ot/src
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /ictstr01/home/icb/alessandro.palma/environment/scportrait_ot/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      training_config: default
      trainer: default
      model: default
      logger: default
      launcher: default
      datamodule: healthy_cite
      checkpoints: default
      hparam_search: sweep_distance
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: submitit_slurm
      hydra/output: default
  verbose: false
checkpoints:
  filename: epoch_{epoch:01d}
  monitor: valid/loss
  mode: min
  every_n_epochs: 50
  save_last: true
  auto_insert_metric_name: false
datamodule:
  rna_adata_path: /lustre/groups/ml01/workspace/alessandro.palma/scportrait/data/citeseq/CITEseq_protein_processed.h5ad
  codex_adata_path: /lustre/groups/ml01/workspace/alessandro.palma/scportrait/data/codex/citeseq/cellfeaturization_results_healthy_processed_std.h5ad
  label_columns:
  - annotation_figure_1
  obsm_key_rna: X_harmony_RNA
  obsm_key_codex: null
  rna_sampling_label: annotation_figure_1
  uniform_sampling_rna: true
logger:
  offline: false
  id: null
  anonymous: null
  project: scportrait_ot_sweep_distance_healthy_cite
  log_model: false
model:
  hidden_dim: 1024
  num_hidden_layers: 3
  time_embedding_dim: 128
  use_batchnorm: false
  sigma: 0.0
  flavor: cfm
  learning_rate: 0.0001
  weight_decay: 1.0e-06
  distance: euclidean
trainer:
  max_epochs: 2000
  accelerator: gpu
  devices: 1
  check_val_every_n_epoch: 1
  log_every_n_steps: 1
  detect_anomaly: true
  deterministic: false
  gradient_clip_val: 1
training_config:
  batch_size: 256
  training_dir: /lustre/groups/ml01/workspace/alessandro.palma/scportrait/experiements
